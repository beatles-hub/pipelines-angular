image: "${NG_APP_IMAGE_NAME}:${NG_APP_IMAGE_TAG}"

include:
  - project: 'singletonsd/pipelines/npm'
    file: '/src/.gitlab-ci-main.yml'

variables:
  NG_APP_IMAGE_NAME: "${GLOBAL_IMAGE_NAME:-node}"
  NG_APP_IMAGE_TAG: "${GLOBAL_IMAGE_TAG:-8-alpine}"
  NG_APP_AWS_S3_DEPLOY: ""
  NG_APP_AWS_S3_REGION: ""
  NG_APP_AWS_S3_ACCESS_KEY_ID: ""
  NG_APP_AWS_S3_SECRET_ACCESS_KEY: ""
  ORIGINAL_REPOSITORY: ""
  TEST_STATIC_ALL: ""
  TEST_DYNAMIC_ALL: ""

stages:
  - install
  - test_static
  - build
  - test_dynamic
  - pre_deploy
  - analysis
  - deploy

pre_deploy:aws_s3:
  image: python:3.7.3-alpine3.10
  stage: pre_deploy
  variables:
    AWS_DEFAULT_REGION: ${NG_APP_AWS_S3_REGION}
    AWS_ACCESS_KEY_ID: ${NG_APP_AWS_S3_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${NG_APP_AWS_S3_SECRET_ACCESS_KEY}
  before_script:
    - apk add --no-cache bash
    - pip install awscli
  script:
    - ./scripts/uploader_amazon_s3.sh
  except:
    - schedules
  only:
    variables:
      - $CI_PROJECT_PATH == $ORIGINAL_REPOSITORY && $NG_APP_AWS_S3_DEPLOY == "true"

pre_deploy:docker:
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_REGISTRY: ${CI_REGISTRY_IMAGE}
  stage: pre_deploy
  before_script:
    - docker login registry.gitlab.com -u ${REGISTRY_GITLAB_USER} -p ${REGISTRY_GITLAB_PASS}
    - apk add --no-cache bash curl gawk git sed util-linux pciutils usbutils coreutils binutils findutils grep
  script:
    - if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then
        export DOCKER_IMAGE_TAG=latest;
      else
        export DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME};
      fi
    - ./scripts/generate_docker_image.sh ${DOCKER_REGISTRY} ${DOCKER_IMAGE_TAG} ${CI_COMMIT_SHA} 1
  except:
    - schedules
